// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/metricbeat.yml
	// spec/osquerybeat.yml
	unpacked := packer.MustUnpack("eJzkmN92q7h3x+/7GOe2XS2I47R0rd+FTco/O+SYJJLQHZJswJYwc4yxoavv3iXAGJxkZjLTmZtenJUcAtLeW3t/92frv78diw37t03Oi0OWl/9aS/HtP79RaZfk9ZCEaLZnjlnQfJ28Abjj2C+4u19GQN8/ZwtBZXimQJy4pTcEBTqTQtusi5TlYUGkveOPh4Tc1iiJA4GVB4LlpIjA24P3GBnPj8kyAqmIQLmN0azhjn2kj4fl6mUhNg7cYUAK6rw9WNk88azFOcLh4TmbZ+N12c22rH8vZZI3z8kh8ax5snqZZ1zCOkZk5vXPuCNKgkxd2fjUzJfMMRtuq/UCLUKX43NyKD0Hfico2BIpjuT1sFTfee4i5U7y4Fn+x/6/eN17jl0T46m3e156lj+s7Y3sWr3oOnN4HaFQ3D2vCQ4qjv0dwU/ZaJ1P9p28f9pIcf7I12A3P1v5oibQ1KkUJ2aEKXXOD1amJQSnItJNGaOLuMaOObYWPx4ST8ITcRdVjGbaCgciMmAd43CIZ4T9nDV9jK4xR7N3Pr+3xdepA5su3qTY2GbDXV9ESHvw3NK0+ufUDQUTJojQRSf4GtdFQ9BFREZYsd0hidHszHHY9H/7SfD+wXPDGXPe+rMjKXWhuNmpjfNz2cZAiiN3YI2Nu3fdQFAH7rhj1s/ZoqD5QufuU3/Wpdi8trmeRvIiyLz3VdpHjuAoDxcay6Fofbqu1+ZcWA3xBvBIUKBRw2+eswUlaj28PkUo2BEcNBjY5xiayrej55AjQVBbybKIpH2KoDbN0eHv9jletzVVRnh+V0sLSR0oeG8zy+HxFt956bm+oMgEpNvz+rz9FwM4e84WaQQCwYxgG+FFgUEpNuvB35ogveISbtt3ex/HMYuByCI0SyfnvHsf88mZdTEZ/j8993npOabO3YV+9am1A5OCAVHR5LDkIBV0d0heHLtZo9lsafEuBhYrPCuS3n+lKdOERpDeLC347wiIE3OhxnTdXL7MpZ8tvAgHzxHSBTOU/28HH/R7WuzoWVxQx264I3YMwJTJ4ODX++W3f+nkdpuJDd3E7+RWyQzyRYTXV4ltSzGSMOXzopO0bEG9TLe97Jx4eSC4C88rKY70ZSaotDPqwP0PpFI3EO079+/moaB4cYxwKFYSniLkHwlam0TaRwbespU1z1Zv3U+K7FOEuKAInrg1KykIxQ+clMyxd3Gt9yHzjp7lleGL+umX6igJgCVRMjFan7u+Tl4m7x4p4HmMZvlKXgSX8PgDhSLKYe4JbRlhX4sRSSNj/eA5KiZhs2pbAcwIsrXflI2sTYtfVClhIE7Egd+v6cddcVbxpo6Zs3NbFgWVhZKRLTPCmiC7xMaipl1aV0M6OuYJg6CikhxjFGidDKh2Fm4jRDSCe+nvJOfBcy4VMZ5aWaHIPt9L6p1c1RxdJtIUAfO8gWZKncuWO+aWOqLhjzeJ9ayFRptDcrWZncfl9c7WEwXmeVy+BKc7ghdam1N5oDEJU4qf2rOP0br9OUhae87+mUmzlSElT+qc7mzVqG4eYxxo01JXpaTOZRTT/OmP+nGLuYSSGn4vp6ottnXUnxWpKdAePKcv3fO1/fzH7Zkx+Lzs25/GFLbYnQ8YdBLw2bnd2xvjUNDX935M9jx/KsPTluIO+X1rHdI+MXBJ+YBD84ldbV6vx7HTU+YubnI6PL9UpMeq9vdxvNu8IILm66rHnrZOxvt51kLV64lbZsOdsFBSyoxwH6Pvd/tA0OqAEe6Yss8Jzp+soxN3/uC5cM/mU1vU3isQVhEolR8JccxdDGB9t86RAlYxCfcxDrYMXCoOLhVROdU+e3rvf202Gxyo7x48N5ipb65x+D1ti+NAYPBBm/mN74hjaxEOxB/6xpqdRi1nqD0mYUkNItrW+zrRhw6BnDDljt0ojGhrpEMB1Vs0gv3tPabcEMR7Vz99y9c2eCH6/L1DMtV+J7HscuSWx+qsB9tHOVF6Tn/OyTg2YcFGa/VndvO9eRp+pxJqRF4qfnv/wN3wHOdBNdq/emoiPcIqL24IEeFCZxJ2+eikenR7f0cdUycOqbhCxXx/wxBgVgRcBHNhxgx4Q3SnTIks0z+Nrs7QPz/F17avdue5o8ZiyB+S+5XSort1W50lI84YI++HCHqLw4hFbrHkODzzMYoBOGPKJ/k2wawXpY346eDjko72P13tw1gbodcspQg2ijPIS5JTA2oqB/36nPgAHiMcaDEKGoLsOgJJvrLmeV/n+aq1jf+MEPkZvbQopjhDjZVNbLHCSv7xjyuGyU35M2MfgNgrghqTYteD144iBSG64K5fRKAHtG7eSVA9AE1DcKgza1ZQRzsNjfNRlxG6NHfwc31XNZgzdWyN/BbAST2l0s4J0pU4nygy9+RV/77CSgyOZc/EvwZwt/VxWHN0B3uOmRMFSvXs2DaAR31PkK+T2ueWtGvuCBl1DbgFMFabJcFhHaOgB7JFxYxwMsN3xdCJ22SGnsyVekXcduY4EasVZQULpw3Sh5lRJa6KN8FrNXcrEG2b40quK2aIhjuwXOWipNZMNYArsCxvs0yb5N/xteG/HpKNoU3AL0azPcHJtThbgXvOFlcfm66YxSmW7czWw6a+Za5fRQA2DJhDAVEw20bAPBF5KTqAFScGYM1tMyV5OAjcAKJ9vvVwUKvcoWi485BMmuV7QAir27Pgak9vp56yx7v7ig+g5xPQaIUEA/tI7U+Artv7tueoGb/3fVZRYz5uSmLjBIK56wfPPmYDLNVtXRQ9aA652g0vE3DM8PrOViOsMLgUzFhP59MrkI3OaAKXX/JjOMOMINIK3N8Mje8aNjZ4wZ10yyTMCU6HAeODJl2rPMPZ958r0OuY8bT/1Ub09zavPwnEcMuB0GLbrAniYuPOfx8gu76q8c3y0Vz/6Ia2f15lx+J9jLp/7R6Ph8Qf3yl1ANaC2RTe+gFk8u6tCSv9VgPfDRr0NAZwG2G/ju7vWfocGXQCQG1iV5srV5vVoP/0BTgcffcVKL276/q74PcL91L7CIepitVKjoDiC3dTd5D/JciiE4b4VV2f9NGV/GhgHXrkV4Bt2p8/vxv7SbDqoWatavEzaJv4010GtfX4p8Ctg7UO8usW1n4XuB2Ov5w2P+uPyE0PQo5gvZleo1XMsHWC/dn/x6u0/wMKak/iLyWg21XcXziWmg3DUKgR7gtVNO1Caszss9pKCiN24Om5uw32FYWyOhEbvbxSGd++7BM/i9pqelU5ioNzhAKxtPh1dGrHF4IuKTPCVoUj7O+GjP+ff/rfAAAA//9pm10J")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
