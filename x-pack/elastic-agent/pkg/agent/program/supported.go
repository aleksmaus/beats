// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/osquerybeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
